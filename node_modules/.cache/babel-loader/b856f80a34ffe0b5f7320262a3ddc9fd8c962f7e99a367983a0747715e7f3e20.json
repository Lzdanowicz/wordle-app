{"ast":null,"code":"var _jsxFileName = \"/Users/lukaszzdanowicz/Desktop/wordle-app/src/components/InputRow.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputRow = ({\n  currentGuess,\n  setCurrentGuess,\n  onSubmit\n}) => {\n  _s();\n  const inputRefs = useRef([]);\n  const handleChange = (index, e) => {\n    const value = e.target.value.toUpperCase();\n    if (/^[A-Z]?$/.test(value)) {\n      const newGuess = [...currentGuess];\n      newGuess[index] = value;\n      setCurrentGuess(newGuess);\n      if (value && index < currentGuess.length - 1) {\n        var _inputRefs$current;\n        (_inputRefs$current = inputRefs.current[index + 1]) === null || _inputRefs$current === void 0 ? void 0 : _inputRefs$current.focus();\n      }\n    }\n  };\n  const handleKeyDown = (index, e) => {\n    if (e.key === 'Backspace' && index > 0 && !currentGuess[index]) {\n      var _inputRefs$current2;\n      (_inputRefs$current2 = inputRefs.current[index - 1]) === null || _inputRefs$current2 === void 0 ? void 0 : _inputRefs$current2.focus();\n    }\n    if (e.key === 'Enter') onSubmit();\n  };\n  const isGuessComplete = currentGuess.every(letter => letter.length > 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex gap-2 justify-center mb-5\",\n    children: [currentGuess.map((letter, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: el => inputRefs.current[index] = el,\n      type: \"text\",\n      maxLength: 1,\n      value: letter,\n      onChange: e => handleChange(index, e),\n      onKeyDown: e => handleKeyDown(index, e),\n      className: \"w-12 h-12 border border-gray-400 text-center text-xl uppercase\"\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onSubmit,\n      disabled: !isGuessComplete,\n      className: `ml-3 px-4 py-2 rounded ${isGuessComplete ? 'bg-blue-500 text-white' : 'bg-gray-300'}`,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(InputRow, \"tWpMuGxnGLebQJHOOQnv6KtvNn4=\");\n_c = InputRow;\nexport default InputRow;\nvar _c;\n$RefreshReg$(_c, \"InputRow\");","map":{"version":3,"names":["React","useRef","jsxDEV","_jsxDEV","InputRow","currentGuess","setCurrentGuess","onSubmit","_s","inputRefs","handleChange","index","e","value","target","toUpperCase","test","newGuess","length","_inputRefs$current","current","focus","handleKeyDown","key","_inputRefs$current2","isGuessComplete","every","letter","className","children","map","ref","el","type","maxLength","onChange","onKeyDown","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/lukaszzdanowicz/Desktop/wordle-app/src/components/InputRow.tsx"],"sourcesContent":["import React, { ChangeEvent, KeyboardEvent, useRef } from 'react';\n\ninterface InputRowProps {\n  currentGuess: string[];\n  setCurrentGuess: React.Dispatch<React.SetStateAction<string[]>>;\n  onSubmit: () => void;\n}\n\nconst InputRow: React.FC<InputRowProps> = ({ currentGuess, setCurrentGuess, onSubmit }) => {\n  const inputRefs = useRef<Array<HTMLInputElement | null>>([]);\n\n  const handleChange = (index: number, e: ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.toUpperCase();\n    if (/^[A-Z]?$/.test(value)) {\n      const newGuess = [...currentGuess];\n      newGuess[index] = value;\n      setCurrentGuess(newGuess);\n      if (value && index < currentGuess.length - 1) {\n        inputRefs.current[index + 1]?.focus();\n      }\n    }\n  };\n\n  const handleKeyDown = (index: number, e: KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Backspace' && index > 0 && !currentGuess[index]) {\n      inputRefs.current[index - 1]?.focus();\n    }\n    if (e.key === 'Enter') onSubmit();\n  };\n\n  const isGuessComplete = currentGuess.every((letter) => letter.length > 0);\n\n  return (\n    <div className=\"flex gap-2 justify-center mb-5\">\n      {currentGuess.map((letter, index) => (\n        <input\n          key={index}\n          ref={(el) => (inputRefs.current[index] = el)}\n          type=\"text\"\n          maxLength={1}\n          value={letter}\n          onChange={(e) => handleChange(index, e)}\n          onKeyDown={(e) => handleKeyDown(index, e)}\n          className=\"w-12 h-12 border border-gray-400 text-center text-xl uppercase\"\n        />\n      ))}\n      <button\n        onClick={onSubmit}\n        disabled={!isGuessComplete}\n        className={`ml-3 px-4 py-2 rounded ${\n          isGuessComplete ? 'bg-blue-500 text-white' : 'bg-gray-300'\n        }`}\n      >\n        Submit\n      </button>\n    </div>\n  );\n};\n\nexport default InputRow;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}