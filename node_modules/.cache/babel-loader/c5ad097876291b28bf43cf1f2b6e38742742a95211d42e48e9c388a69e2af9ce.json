{"ast":null,"code":"var _jsxFileName = \"/Users/lukaszzdanowicz/Desktop/wordle-app/src/components/GuessRow.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GuessRow = ({\n  word,\n  targetWord\n}) => {\n  const getLetterStatus = (char, index) => {\n    if (char === targetWord[index]) return 'bg-green-500 text-white'; // Correct position\n    if (targetWord.includes(char)) return 'bg-yellow-500 text-black'; // Present but wrong position\n    return 'bg-gray-500 text-white'; // Not in the word\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex gap-2 justify-center mb-2\",\n    children: word.split('').map((char, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `w-12 h-12 flex items-center justify-center text-xl font-bold rounded ${getLetterStatus(char, index)}`,\n      children: char\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = GuessRow;\nexport default GuessRow;\nvar _c;\n$RefreshReg$(_c, \"GuessRow\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","GuessRow","word","targetWord","getLetterStatus","char","index","includes","className","children","split","map","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lukaszzdanowicz/Desktop/wordle-app/src/components/GuessRow.tsx"],"sourcesContent":["import React from 'react';\n\ninterface GuessRowProps {\n  word: string;\n  targetWord: string;\n}\n\nconst GuessRow: React.FC<GuessRowProps> = ({ word, targetWord }) => {\n  const getLetterStatus = (char: string, index: number): string => {\n    if (char === targetWord[index]) return 'bg-green-500 text-white'; // Correct position\n    if (targetWord.includes(char)) return 'bg-yellow-500 text-black'; // Present but wrong position\n    return 'bg-gray-500 text-white'; // Not in the word\n  };\n\n  return (\n    <div className=\"flex gap-2 justify-center mb-2\">\n      {word.split('').map((char, index) => (\n        <span\n          key={index}\n          className={`w-12 h-12 flex items-center justify-center text-xl font-bold rounded ${getLetterStatus(\n            char,\n            index\n          )}`}\n        >\n          {char}\n        </span>\n      ))}\n    </div>\n  );\n};\n\nexport default GuessRow;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO1B,MAAMC,QAAiC,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAW,CAAC,KAAK;EAClE,MAAMC,eAAe,GAAGA,CAACC,IAAY,EAAEC,KAAa,KAAa;IAC/D,IAAID,IAAI,KAAKF,UAAU,CAACG,KAAK,CAAC,EAAE,OAAO,yBAAyB,CAAC,CAAC;IAClE,IAAIH,UAAU,CAACI,QAAQ,CAACF,IAAI,CAAC,EAAE,OAAO,0BAA0B,CAAC,CAAC;IAClE,OAAO,wBAAwB,CAAC,CAAC;EACnC,CAAC;EAED,oBACEL,OAAA;IAAKQ,SAAS,EAAC,gCAAgC;IAAAC,QAAA,EAC5CP,IAAI,CAACQ,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAAC,CAACN,IAAI,EAAEC,KAAK,kBAC9BN,OAAA;MAEEQ,SAAS,EAAE,wEAAwEJ,eAAe,CAChGC,IAAI,EACJC,KACF,CAAC,EAAG;MAAAG,QAAA,EAEHJ;IAAI,GANAC,KAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAON,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GAtBIf,QAAiC;AAwBvC,eAAeA,QAAQ;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}